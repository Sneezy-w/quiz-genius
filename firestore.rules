rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Projects collection rules
    match /projects/{projectId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) || 
        resource.data.collaborators != null && 
        request.auth.uid in resource.data.collaborators
      );
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Quizzes collection rules
    match /quizzes/{quizId} {
      allow read: if isAuthenticated() && get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.userId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.userId == request.auth.uid;
    }
  }
} 